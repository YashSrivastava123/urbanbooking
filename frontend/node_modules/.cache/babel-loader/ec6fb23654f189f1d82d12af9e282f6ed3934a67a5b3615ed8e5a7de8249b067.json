{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Desktop/urban booking/frontend/src/pages/SlotBookingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAvailableSlots, useCreateBooking } from '../hooks/useBookings';\nimport { LoadingSpinner } from '../components/LoadingSpinner';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { SuccessMessage } from '../components/SuccessMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Function to generate a simple UUID\nconst generateUUID = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport const SlotBookingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [customerId, setCustomerId] = useState('');\n\n  // Fetch available slots\n  const {\n    data: slots,\n    isLoading: slotsLoading,\n    error: slotsError,\n    refetch: refetchSlots\n  } = useAvailableSlots(selectedDate);\n\n  // Create booking mutation\n  const {\n    mutate: createBooking,\n    isPending: isCreating,\n    error: bookingError,\n    isSuccess: bookingSuccess\n  } = useCreateBooking();\n\n  // Handle slot selection\n  const handleSlotSelect = useCallback(slot => {\n    setSelectedSlot(slot);\n  }, []);\n\n  // Handle booking submission\n  const handleBookingSubmit = useCallback(e => {\n    e.preventDefault();\n    if (!selectedSlot || !customerId.trim()) {\n      return;\n    }\n    createBooking({\n      slotId: selectedSlot.id,\n      customerId: customerId.trim()\n    });\n  }, [selectedSlot, customerId, createBooking]);\n\n  // Handle date change\n  const handleDateChange = useCallback(e => {\n    setSelectedDate(e.target.value);\n    setSelectedSlot(null); // Reset selection when date changes\n  }, []);\n\n  // Generate customer ID\n  const handleGenerateCustomerId = useCallback(() => {\n    setCustomerId(generateUUID());\n  }, []);\n\n  // Format time for display\n  const formatTime = dateString => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  // Handle successful booking\n  React.useEffect(() => {\n    if (bookingSuccess && selectedSlot) {\n      // Navigate to review page after a short delay\n      const timer = setTimeout(() => {\n        navigate(`/booking/${selectedSlot.id}`);\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [bookingSuccess, selectedSlot, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900 mb-2\",\n          children: \"Book Your Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Select an available time slot and provide your details to make a booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Select Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          value: selectedDate,\n          onChange: handleDateChange,\n          min: new Date().toISOString().split('T')[0],\n          className: \"input max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), slotsError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: \"Failed to load available slots. Please try again.\",\n        className: \"mb-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), bookingError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: \"Failed to create booking. Please try again.\",\n        className: \"mb-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), bookingSuccess && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        message: \"Booking created successfully! Redirecting to review page...\",\n        className: \"mb-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-4\",\n          children: [\"Available Slots for \", new Date(selectedDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), slotsLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          size: \"lg\",\n          className: \"py-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this) : slots && slots.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 border rounded-lg cursor-pointer transition-colors ${(selectedSlot === null || selectedSlot === void 0 ? void 0 : selectedSlot.id) === slot.id ? 'border-primary-500 bg-primary-50' : 'border-gray-200 hover:border-primary-300'}`,\n            onClick: () => handleSlotSelect(slot),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-medium text-gray-900\",\n                children: formatTime(slot.start_time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"to \", formatTime(slot.end_time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), slot.provider && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mt-1\",\n                children: [\"Provider: \", slot.provider.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, slot.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8 text-gray-500\",\n          children: \"No available slots for the selected date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), selectedSlot && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-4\",\n          children: \"Complete Your Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleBookingSubmit,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customerId\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Customer ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"customerId\",\n                value: customerId,\n                onChange: e => setCustomerId(e.target.value),\n                placeholder: \"Enter your customer ID (UUID format)\",\n                className: \"input flex-1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleGenerateCustomerId,\n                className: \"btn-secondary whitespace-nowrap\",\n                children: \"Generate ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"For testing:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 22\n              }, this), \" Click \\\"Generate ID\\\" to create a valid customer ID, or use any UUID format like: 550e8400-e29b-41d4-a716-446655440000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-gray-900 mb-2\",\n              children: \"Selected Slot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [formatTime(selectedSlot.start_time), \" - \", formatTime(selectedSlot.end_time)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), selectedSlot.provider && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [\"Provider: \", selectedSlot.provider.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isCreating || !customerId.trim(),\n              className: \"btn-primary flex-1 disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: isCreating ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                  size: \"sm\",\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), \"Creating Booking...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this) : 'Confirm Booking'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setSelectedSlot(null),\n              className: \"btn-secondary\",\n              children: \"Change Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBookingPage, \"PHoe1O6z5e1obXhTm7XpSmAoWxc=\", false, function () {\n  return [useNavigate, useAvailableSlots, useCreateBooking];\n});\n_c = SlotBookingPage;\nvar _c;\n$RefreshReg$(_c, \"SlotBookingPage\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","useAvailableSlots","useCreateBooking","LoadingSpinner","ErrorMessage","SuccessMessage","jsxDEV","_jsxDEV","generateUUID","replace","c","r","Math","random","v","toString","SlotBookingPage","_s","navigate","selectedDate","setSelectedDate","Date","toISOString","split","selectedSlot","setSelectedSlot","customerId","setCustomerId","data","slots","isLoading","slotsLoading","error","slotsError","refetch","refetchSlots","mutate","createBooking","isPending","isCreating","bookingError","isSuccess","bookingSuccess","handleSlotSelect","slot","handleBookingSubmit","e","preventDefault","trim","slotId","id","handleDateChange","target","value","handleGenerateCustomerId","formatTime","dateString","toLocaleTimeString","hour","minute","hour12","useEffect","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","min","message","toLocaleDateString","size","length","map","onClick","start_time","end_time","provider","name","onSubmit","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/yash/Desktop/urban booking/frontend/src/pages/SlotBookingPage.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAvailableSlots, useCreateBooking } from '../hooks/useBookings';\nimport { LoadingSpinner } from '../components/LoadingSpinner';\nimport { ErrorMessage } from '../components/ErrorMessage';\nimport { SuccessMessage } from '../components/SuccessMessage';\nimport { Slot } from '../types';\n\n// Function to generate a simple UUID\nconst generateUUID = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\nexport const SlotBookingPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState<string>(\n    new Date().toISOString().split('T')[0]\n  );\n  const [selectedSlot, setSelectedSlot] = useState<Slot | null>(null);\n  const [customerId, setCustomerId] = useState<string>('');\n\n  // Fetch available slots\n  const { \n    data: slots, \n    isLoading: slotsLoading, \n    error: slotsError,\n    refetch: refetchSlots \n  } = useAvailableSlots(selectedDate);\n\n  // Create booking mutation\n  const { \n    mutate: createBooking, \n    isPending: isCreating,\n    error: bookingError,\n    isSuccess: bookingSuccess \n  } = useCreateBooking();\n\n  // Handle slot selection\n  const handleSlotSelect = useCallback((slot: Slot) => {\n    setSelectedSlot(slot);\n  }, []);\n\n  // Handle booking submission\n  const handleBookingSubmit = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!selectedSlot || !customerId.trim()) {\n      return;\n    }\n\n    createBooking({\n      slotId: selectedSlot.id,\n      customerId: customerId.trim()\n    });\n  }, [selectedSlot, customerId, createBooking]);\n\n  // Handle date change\n  const handleDateChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedDate(e.target.value);\n    setSelectedSlot(null); // Reset selection when date changes\n  }, []);\n\n  // Generate customer ID\n  const handleGenerateCustomerId = useCallback(() => {\n    setCustomerId(generateUUID());\n  }, []);\n\n  // Format time for display\n  const formatTime = (dateString: string) => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  // Handle successful booking\n  React.useEffect(() => {\n    if (bookingSuccess && selectedSlot) {\n      // Navigate to review page after a short delay\n      const timer = setTimeout(() => {\n        navigate(`/booking/${selectedSlot.id}`);\n      }, 2000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [bookingSuccess, selectedSlot, navigate]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Book Your Slot\n          </h1>\n          <p className=\"text-gray-600\">\n            Select an available time slot and provide your details to make a booking\n          </p>\n        </div>\n\n        {/* Date Selection */}\n        <div className=\"card mb-6\">\n          <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Select Date\n          </label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            min={new Date().toISOString().split('T')[0]}\n            className=\"input max-w-xs\"\n          />\n        </div>\n\n        {/* Error Messages */}\n        {slotsError && (\n          <ErrorMessage \n            message=\"Failed to load available slots. Please try again.\" \n            className=\"mb-6\"\n          />\n        )}\n\n        {bookingError && (\n          <ErrorMessage \n            message=\"Failed to create booking. Please try again.\" \n            className=\"mb-6\"\n          />\n        )}\n\n        {/* Success Message */}\n        {bookingSuccess && (\n          <SuccessMessage \n            message=\"Booking created successfully! Redirecting to review page...\" \n            className=\"mb-6\"\n          />\n        )}\n\n        {/* Available Slots */}\n        <div className=\"card mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n            Available Slots for {new Date(selectedDate).toLocaleDateString()}\n          </h2>\n\n          {slotsLoading ? (\n            <LoadingSpinner size=\"lg\" className=\"py-8\" />\n          ) : slots && slots.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {slots.map((slot) => (\n                <div\n                  key={slot.id}\n                  className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                    selectedSlot?.id === slot.id\n                      ? 'border-primary-500 bg-primary-50'\n                      : 'border-gray-200 hover:border-primary-300'\n                  }`}\n                  onClick={() => handleSlotSelect(slot)}\n                >\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-medium text-gray-900\">\n                      {formatTime(slot.start_time)}\n                    </div>\n                    <div className=\"text-sm text-gray-500\">\n                      to {formatTime(slot.end_time)}\n                    </div>\n                    {slot.provider && (\n                      <div className=\"text-sm text-gray-600 mt-1\">\n                        Provider: {slot.provider.name}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-gray-500\">\n              No available slots for the selected date.\n            </div>\n          )}\n        </div>\n\n        {/* Booking Form */}\n        {selectedSlot && (\n          <div className=\"card\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n              Complete Your Booking\n            </h2>\n            \n            <form onSubmit={handleBookingSubmit} className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"customerId\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Customer ID\n                </label>\n                <div className=\"flex gap-2\">\n                  <input\n                    type=\"text\"\n                    id=\"customerId\"\n                    value={customerId}\n                    onChange={(e) => setCustomerId(e.target.value)}\n                    placeholder=\"Enter your customer ID (UUID format)\"\n                    className=\"input flex-1\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={handleGenerateCustomerId}\n                    className=\"btn-secondary whitespace-nowrap\"\n                  >\n                    Generate ID\n                  </button>\n                </div>\n                <p className=\"text-sm text-gray-500 mt-1\">\n                  💡 <strong>For testing:</strong> Click \"Generate ID\" to create a valid customer ID, or use any UUID format like: 550e8400-e29b-41d4-a716-446655440000\n                </p>\n              </div>\n\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"font-medium text-gray-900 mb-2\">Selected Slot:</h3>\n                <p className=\"text-gray-600\">\n                  {formatTime(selectedSlot.start_time)} - {formatTime(selectedSlot.end_time)}\n                </p>\n                {selectedSlot.provider && (\n                  <p className=\"text-gray-600\">\n                    Provider: {selectedSlot.provider.name}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"flex gap-4\">\n                <button\n                  type=\"submit\"\n                  disabled={isCreating || !customerId.trim()}\n                  className=\"btn-primary flex-1 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isCreating ? (\n                    <div className=\"flex items-center justify-center\">\n                      <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n                      Creating Booking...\n                    </div>\n                  ) : (\n                    'Confirm Booking'\n                  )}\n                </button>\n                \n                <button\n                  type=\"button\"\n                  onClick={() => setSelectedSlot(null)}\n                  className=\"btn-secondary\"\n                >\n                  Change Slot\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}