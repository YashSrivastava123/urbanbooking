{"ast":null,"code":"import axios from 'axios';\nclass ApiService {\n  constructor() {\n    this.api = void 0;\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      timeout: 10000\n    });\n\n    // Add auth token to requests if available\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    // Request interceptor for logging\n    this.api.interceptors.request.use(config => {\n      var _config$method;\n      console.log(`üöÄ API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n      return config;\n    }, error => {\n      console.error('‚ùå API Request Error:', error);\n      return Promise.reject(error);\n    });\n\n    // Response interceptor for logging\n    this.api.interceptors.response.use(response => {\n      console.log(`‚úÖ API Response: ${response.status} ${response.config.url}`);\n      return response;\n    }, error => {\n      var _error$response, _error$response2;\n      console.error('‚ùå API Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      return Promise.reject(error);\n    });\n  }\n\n  // Slots API\n  async getAvailableSlots(params) {\n    const response = await this.api.get('/api/slots', {\n      params\n    });\n    return response.data;\n  }\n\n  // Bookings API\n  async createBooking(bookingData) {\n    const response = await this.api.post('/api/bookings', bookingData);\n    return response.data;\n  }\n  async getBooking(id) {\n    const response = await this.api.get(`/api/bookings/${id}`);\n    return response.data;\n  }\n  async updateBooking(id, updateData) {\n    const response = await this.api.put(`/api/bookings/${id}`, updateData);\n    return response.data;\n  }\n  async cancelBooking(id) {\n    const response = await this.api.delete(`/api/bookings/${id}`);\n    return response.data;\n  }\n  async getProviders() {\n    const response = await this.api.get('/api/providers');\n    return response.data;\n  }\n}\nexport const apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","ApiService","constructor","api","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response2","data","getAvailableSlots","params","get","createBooking","bookingData","post","getBooking","id","updateBooking","updateData","put","cancelBooking","delete","getProviders","apiService"],"sources":["/Users/yash/Desktop/urban booking/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport { \n  Slot, \n  Booking, \n  CreateBookingRequest, \n  UpdateBookingRequest, \n  GetSlotsParams,\n  ApiResponse,\n  User\n} from '../types';\n\nclass ApiService {\n  private api: AxiosInstance;\n\n  constructor() {\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      timeout: 10000,\n    });\n\n    // Add auth token to requests if available\n    this.api.interceptors.request.use((config) => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    // Request interceptor for logging\n    this.api.interceptors.request.use(\n      (config) => {\n        console.log(`üöÄ API Request: ${config.method?.toUpperCase()} ${config.url}`);\n        return config;\n      },\n      (error) => {\n        console.error('‚ùå API Request Error:', error);\n        return Promise.reject(error);\n      }\n    );\n\n    // Response interceptor for logging\n    this.api.interceptors.response.use(\n      (response: AxiosResponse) => {\n        console.log(`‚úÖ API Response: ${response.status} ${response.config.url}`);\n        return response;\n      },\n      (error) => {\n        console.error('‚ùå API Response Error:', error.response?.status, error.response?.data);\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // Slots API\n  async getAvailableSlots(params?: GetSlotsParams & { limit?: number; offset?: number }): Promise<Slot[]> {\n    const response = await this.api.get<Slot[]>('/api/slots', { params });\n    return response.data;\n  }\n\n  // Bookings API\n  async createBooking(bookingData: CreateBookingRequest): Promise<Booking> {\n    const response = await this.api.post<Booking>('/api/bookings', bookingData);\n    return response.data;\n  }\n\n  async getBooking(id: string): Promise<Booking> {\n    const response = await this.api.get<Booking>(`/api/bookings/${id}`);\n    return response.data;\n  }\n\n  async updateBooking(id: string, updateData: UpdateBookingRequest): Promise<Booking> {\n    const response = await this.api.put<Booking>(`/api/bookings/${id}`, updateData);\n    return response.data;\n  }\n\n  async cancelBooking(id: string): Promise<Booking> {\n    const response = await this.api.delete<Booking>(`/api/bookings/${id}`);\n    return response.data;\n  }\n\n  async getProviders(): Promise<User[]> {\n    const response = await this.api.get<User[]>('/api/providers');\n    return response.data;\n  }\n}\n\nexport const apiService = new ApiService();\nexport default apiService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}